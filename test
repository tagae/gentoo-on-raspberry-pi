#!/usr/bin/expect -f

proc stage {title} {
    puts "----\u25B6 $title\n"
}

proc check {message} {
    puts "\n\n\u2705 $message\n"
}

proc die {message} {
    puts stderr "\n\u274C $message\n"
    exit 2
}

proc ssh {machine args} {
    exec ssh -q -n -i install.d/ssh/$machine \
        -o StrictHostKeyChecking=no \
        -o UserKnownHostsFile=/dev/null \
        -o ConnectTimeout=5 \
        root@$machine.local {*}$args >@stdout 2>@stderr
}

if {[llength $argv] == 0} {
    die "usage: test MEDIA"
}

set media [lindex $argv 0]
regexp -all {^(.+)\.([^.]+)\.img} $media whole_match machine profile

set cmdline_prompt {\# $}

set timeout 5

stage "Boot up"
spawn env TAP=tap0 ./boot $media
expect -timeout 60 \
    "This is $machine" { check "Instance booted up" } \
    timeout { die "Expected instance to finish booting up" }

stage "Console login"
expect {login: $} { } \
    timeout { die "Expected console login prompt" }

send "root\r"
expect {Password: $} { } \
    timeout { die "Expected password prompt" }

send $env(PASSWORD)
send "\r"
expect $cmdline_prompt { check "Logged in through console" } \
    timeout { die "Expected command line prompt" }

stage "Checking systemd services"
ssh $machine ! systemctl is-failed --quiet '*'
check "All systemd services are operational"

stage "Shutting down"
send "systemctl poweroff\r"
expect -timeout 10 \
    timeout { die "Expected instance termination" } \
    eof { check "Instance shut down successfully" }
